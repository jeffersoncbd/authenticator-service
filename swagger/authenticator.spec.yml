openapi: 3.0.0
info:
  title: Authenticator
  description: >-
    Especificações da API para o back-end da aplicação "Authenticator".
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Status:
      type: string
      enum:
        - active
        - inactive
    BasicResponse:
      type: object
      properties:
        feedback:
          type: string
      required:
        - feedback
      additionalProperties: false
    BasicCreationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        feedback:
          type: string
      required:
        - id
        - feedback
      additionalProperties: false

    Error:
      type: object
      properties:
        feedback:
          type: string
      required:
        - feedback
      additionalProperties: false
    Unauthorized:
      type: object
      properties:
        feedback:
          type: string
      required:
        - feedback
      additionalProperties: false
    InternalServerError:
      type: object
      properties:
        feedback:
          type: string
      required:
        - feedback
      additionalProperties: false

    LoginCredentials:
      type: object
      properties:
        application:
          type: string
          format: uuid
          x-go-extra-tags:
            validate: required
        email:
          type: string
          format: email
          x-go-extra-tags:
            validate: required
        password:
          type: string
          format: password
          x-go-extra-tags:
            validate: required,min=8,max=32
      required:
        - application
        - email
        - password
      additionalProperties: false
    LoginResponse:
      type: object
      properties:
        feedback:
          type: string
        token:
          type: string
      required:
        - token
        - feedback
      additionalProperties: false

    NewUser:
      type: object
      properties:
        name:
          type: string
          x-go-extra-tags:
            validate: required,min=3
        email:
          type: string
          format: email
          x-go-extra-tags:
            validate: required,email
        password:
          type: string
          format: password
          x-go-extra-tags:
            validate: required,min=8,max=32
        groupId:
          type: string
          format: uuid
          x-go-extra-tags:
            validate: required
      required:
        - name
        - email
        - password
        - groupId
      additionalProperties: false
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        group:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
          required:
            - id
            - name
          additionalProperties: false
        status:
          $ref: "#/components/schemas/Status"
      required:
        - name
        - email
        - group
        - status
      additionalProperties: false
    UserUpdated:
      type: object
      properties:
        name:
          type: string
          x-go-extra-tags:
            validate: required,min=3
        newEmail:
          type: string
          format: email
          x-go-extra-tags:
            validate: email
        newPassword:
          type: string
          format: password
          x-go-extra-tags:
            validate: min=8,max=32
        groupId:
          type: string
          format: uuid
          x-go-extra-tags:
            validate: required
        status:
          $ref: "#/components/schemas/Status"
      required:
        - name
        - groupId
        - status
      additionalProperties: false

    NewApplication:
      type: object
      properties:
        name:
          type: string
          x-go-extra-tags:
            validate: required
      required:
        - name
      additionalProperties: false
    Application:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
      additionalProperties: false

    NewGroup:
      type: object
      properties:
        name:
          type: string
          x-go-extra-tags:
            validate: required,min=3
      required:
        - name
        - applicationId
      additionalProperties: false
    Group:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        permissions:
          type: object
          description: Este objeto é composto pela definição de permissões onde a chave é o identificador do recurso e o valor é o número da permissão
      required:
        - id
        - name
        - permissions
      additionalProperties: false

    Permission:
      type: object
      properties:
        key:
          type: string
          x-go-extra-tags:
            validate: required,min=3
        permission:
          type: integer
          x-go-extra-tags:
            validate: required
      required:
        - key
        - permission
      additionalProperties: false

  responses:
    "401":
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Unauthorized"
    "400":
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    "500":
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerError"

paths:
  /login:
    post:
      operationId: Login
      summary: Autentica usuário
      tags:
        - session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
      responses:
        "200":
          description: Token de autenticação
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /applications:
    get:
      operationId: ApplicationsList
      security:
        - bearerAuth: []
      summary: Lista todas as aplicações
      tags:
        - applications
      responses:
        "200":
          description: Lista de aplicações
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Application"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
    post:
      operationId: NewApplication
      security:
        - bearerAuth: []
      summary: Cadastra uma aplicação
      tags:
        - applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewApplication"
      responses:
        "201":
          description: ID da aplicação cadastrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicCreationResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /applications/{id}:
    get:
      operationId: FindApplicationByID
      security:
        - bearerAuth: []
      summary: Todas as informações de uma aplicação
      tags:
        - applications
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
      responses:
        "200":
          description: Informações da aplicação
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /applications/{id}/groups:
    get:
      operationId: GroupsList
      security:
        - bearerAuth: []
      summary: Lista os grupos de permissões de uma aplicação
      tags:
        - groups
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
      responses:
        "200":
          description: Lista grupos de permissões
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
    post:
      operationId: NewGroup
      security:
        - bearerAuth: []
      summary: Cadastra um novo grupo de permissões de uma aplicação
      tags:
        - groups
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewGroup"
      responses:
        "201":
          description: ID do grupo cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicCreationResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /applications/{application_id}/groups/{group_id}/permissions:
    post:
      operationId: SetPermission
      security:
        - bearerAuth: []
      summary: Adiciona ou atualiza permissão de um grupo de usuários de uma aplicação
      tags:
        - permissions
      parameters:
        - in: path
          name: application_id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
        - in: path
          name: group_id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Permission"
      responses:
        "201":
          description: Permissão definida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /applications/{application_id}/groups/{group_id}/permissions/{permission_key}:
    delete:
      operationId: DeletePermission
      security:
        - bearerAuth: []
      summary: Exclui uma permissão de um grupo de usuários de uma aplicação
      tags:
        - permissions
      parameters:
        - in: path
          name: application_id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
        - in: path
          name: group_id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
        - in: path
          name: permission_key
          schema:
            type: string
          x-go-extra-tags:
            validate: required
          required: true
      responses:
        "200":
          description: Permissão excluída
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /applications/{id}/users:
    get:
      operationId: UsersList
      security:
        - bearerAuth: []
      summary: Lista os usuários de uma aplicação
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
      responses:
        "200":
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
    post:
      operationId: NewUser
      security:
        - bearerAuth: []
      summary: Cadastra um novo usuário
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
      responses:
        "201":
          description: ID do usuário cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /applications/{id}/users/{byEmail}:
    put:
      operationId: UserUpdate
      security:
        - bearerAuth: []
      summary: Atualiza um usuário
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          x-go-extra-tags:
            validate: required,uuid
          required: true
        - in: path
          name: byEmail
          schema:
            type: string
            format: email
            x-go-extra-tags:
              validate: required,email
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdated"
      responses:
        "200":
          description: Usuário atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
